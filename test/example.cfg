process PROD = {

//      service = Timing { }

//      service = SimpleMemoryCheck {
//              untracked int32 ignoreTotal = -1 # default is one
//      }

   service = RandomNumberGeneratorService {
      untracked uint32 sourceSeed = 98765
   }

include "SimGeneral/HepPDTESSource/data/pdt.cfi"

//
// Particle Gun as source
//

   source = FlatRandomPtGunSource { 
      untracked uint32 firstRun  =  1
      untracked int32  maxEvents = 25 
      untracked PSet  PGunParameters = {
         # you can request more than 1 particle
         untracked vint32 PartID = {-11,11,-12,12,-13,13,-14,14,-15,15,-16,16,22,22,111,111,-211,211}
         untracked double MinEta = -3.5
         untracked double MaxEta =  3.5
         #
         # phi must be given in radians
         #
         untracked double MinPhi = -3.14159265358979323846
         untracked double MaxPhi =  3.14159265358979323846
         untracked double MinPt  = 100.00
         untracked double MaxPt  = 900.00
      }
      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
    }
        
//
// the following is not the most efficient configuration
// but allows to show the features possible, and how
// the trigger and timing reports are structured
//

// If needed: convert CaloJet collections to RecoCaloJetCandidate collections
//
//        module convertJets = CaloJetCandidateProducer {
//                string src = "?"
//                bool storeConcreteCollection = true 
//        }

        service = MessageLogger {
          untracked vstring destinations = {"cout"}
          untracked PSet cout = { untracked string threshold = "DEBUG" }
          untracked vstring debugModules = {"simrec","hlt1","hlt2","glob","anal1","anal2"}
        }


// Fast dummy simulation and reconstruction, 
// producing Candidate Collections

        module simrec = HLTProdCand { }


// HLT filter modules

        module hlt1 = HLTSimpleJet {
                InputTag inputTag = simrec
                double   ptcut    = 850.0
                int32    njcut    = 1
        }

        module hlt2 = HLTFiltCand {
                InputTag photTag = simrec
                InputTag elecTag = simrec
                InputTag muonTag = simrec
                InputTag jetsTag = simrec
                InputTag metsTag = simrec
                double photPt  = 230.
                double elecPt  = 230.
                double muonPt  = 230.
                double jetsPt  = 230.
                double metsPt  = 230.
        }


// Prescaler modules

        module presc1 = HLTPrescaler {
                bool   makeFilterObject = true
                uint32 prescaleFactor = 2
        }

        module presc2 = HLTPrescaler {
                bool   makeFilterObject = true
                uint32 prescaleFactor = 3
        }


// Actual trigger paths

        path p1 = {simrec, hlt1, presc1}
        path p2 = {simrec, hlt2, presc2} 


// Final wrap-up analysis modules

        module anal1 = HLTAnalCand {
            InputTag inputTag = hlt1
        }

        module anal2 = HLTAnalCand {
            InputTag inputTag = hlt2
        }

	module glob = HLTMakeSummaryObjects { }

        endpath end = {anal1, anal2, glob, out}

//      endpath end = {anal1, anal2, anal, glob, out}
//      module anal =  EventContentAnalyzer {}


// Want trigger table summary in log file & results object
// with specified triggers

        untracked PSet options = {
           untracked bool wantSummary = true  # default is false
           untracked bool makeTriggerResults = true 
           vstring listOfTriggers = {"p1","p2"}
        }


// Writing out the data structures

        module out = PoolOutputModule {
          untracked string fileName = 'file:HLToutput.root'
          untracked PSet SelectEvents = {
          vstring SelectEvents = { "p1","p2" }
          }
        }

}
